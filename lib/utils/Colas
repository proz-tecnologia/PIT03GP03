cards 1281===



/*
Widget build(BuildContext context) {
    return Container(

  margin: const EdgeInsets.all(20),
  child: Column(

  crossAxisAlignment: CrossAxisAlignment.start,
  children: [
  _account(),
  const SizedBox(height: 12,),
  _accountMes(),
  Row(
      ),
  const Text(' '),
  ],
  ),
  _accountMes(){
    return  GetBuilder<ControllerHomePage>(
      init: ControllerHomePage(),
      builder: (controller) {
        return Text(controller.conta,
          style:const TextStyle(
              fontSize: 20,
              fontWeight:FontWeight.bold)
        );
      }
    );
  }
}
import 'package:flutter/material.dart';
import 'package:email_validator/email_validator.dart';

import '../../../models/credential/users_credential.dart';
import '../../HomePage/pages/homepage.dart';

class InputLoginWidget extends StatefulWidget {
  const InputLoginWidget({Key? key}) : super(key: key);

  @override
  State<InputLoginWidget> createState() => _InputLoginWidgetState();
}

class _InputLoginWidgetState extends State<InputLoginWidget> {
  final fomrKey = GlobalKey<FormState>();
  String _email = "";
  String _password = "";

  UserCredential? _userCredential;

  bool _canShowPassword = false;
  @override
  Widget build(BuildContext context) {
    return Form(
      key: fomrKey,
      child: Column(
        crossAxisAlignment: CrossAxisAlignment.start,
        children: [
          TextFormField(
            validator: (String? val) => !EmailValidator.validate(val!, true)
                ? 'Not a valid email.'
                : null,
            decoration: InputDecoration(
                labelText: "Email",
                border: OutlineInputBorder(
                    borderRadius: BorderRadius.circular(20))),
          ),
          const Padding(
            padding: EdgeInsets.only(bottom: 16),
          ),
          TextFormField(
            validator: (String? val) => (val!.length < 4 || val.isEmpty)
                ? 'Password too short..'
                : null,
            obscureText: true,
            decoration: InputDecoration(
                labelText: "Senha",
                border: OutlineInputBorder(
                    borderRadius: BorderRadius.circular(20))),
          ),
          const SizedBox(
            height: 20,
          ),
          Row(
            children: [
              Expanded(
                child: TextButton(
                  onPressed: () {
                    var formValid = fomrKey.currentState?.validate() ?? false;
                    var message = 'Login invalido';

                    if (formValid) {
                      message = "Login efetuado com sucesso";
                    }

                    ScaffoldMessenger.of(context)
                        .showSnackBar(SnackBar(content: Text(message)));
                  },
                  style: TextButton.styleFrom(
                    backgroundColor: const Color.fromARGB(255, 125, 178, 139),
                    foregroundColor: Colors.white,
                    padding: const EdgeInsets.all(15),
                    shape: RoundedRectangleBorder(
                        borderRadius: BorderRadius.circular(20)),
                  ),
                  child: const Text(
                    'Login',
                    style: TextStyle(color: Colors.white, fontSize: 20),
                  ),
                ),
              ),
            ],
          ),
        ],
      ),
    );
  }
  void navigateToHome() {
    Navigator.of(context).pushReplacement(MaterialPageRoute(
        builder: (_) => const HomePage2(),
        settings: RouteSettings(arguments: _userCredential)));
  }
}




 Row(
            mainAxisAlignment: MainAxisAlignment.spaceAround,
            children: <Widget>[
              // dentro do planejamento
              GestureDetector(
                onTap: () {
                  setState(() {
                    _isMeuGreen = ! _isMeuGreen;

                  });
                },
                child: Text(
                  'Meu Green',
                  style: TextStyle(
                      color: _isMeuGreen ? _secondaryColor : Colors.white,
                      fontSize: 20,
                      fontWeight: FontWeight.w500,
                      height: 1),
                ),
              ),
              GestureDetector(
                  onTap: () {
                    setState(() {
                      _isMeuGreen = !_isMeuGreen;
                    });
                  },
                  child: Text(
                    'Valores gastos',
                    style: TextStyle(
                        color: _isMeuGreen ? Colors.white : _secondaryColor,
                        fontSize: 20,
                        fontWeight: FontWeight.w500,
                        height: 1),
                  )),
            ],
          ),



          import 'package:flutter/material.dart';
          import 'package:flutter/services.dart';
          import 'package:green/modules/login/Widgets/text_button_expand_widget.dart';
          import '../../../models/credential/users_credential.dart';
          import '../../HomePage/pages/homepage.dart';
          import 'input_login_widgets.dart';

          class LoginPage extends StatefulWidget {
            const LoginPage({Key? key}) : super(key: key);

            @override
            State<LoginPage> createState() => _LoginPageState();
          }

          class _LoginPageState extends State<LoginPage> {
            final _formKey = GlobalKey<FormState>();
            String _email = "";
            String _password = "";
            UserCredential? _userCredential;
            bool _canShowPassword = false;




            @override
            void initState() {
              SystemChrome.setSystemUIOverlayStyle(
                  SystemUiOverlayStyle.light.copyWith(statusBarColor: Colors.green));
              super.initState();
            }


            @override
            Widget build(BuildContext context) {
              final size = MediaQuery.of(context).size;

              return Scaffold(
                body: Stack(

                  children: [
                    Container(
                      width: size.width,
                      height: size.height,
                      color: Colors.green,
                      child: Image.asset(
                        "assets/logo.png",
                        fit: BoxFit.fitHeight,
                      ),
                    ),
                    Align(
                      alignment: Alignment.bottomCenter,
                      child: Container(
                        width: size.width,
                        height: size.height * 0.8,
                        decoration: const BoxDecoration(
                            color: Colors.white,
                            borderRadius: BorderRadius.only(
                                topLeft: Radius.circular(40),
                                topRight: Radius.circular(40))),
                        child: Padding(
                          padding: const EdgeInsets.only(top: 60, left: 32, right: 32),
                          child: SingleChildScrollView(
                            child: Column(
                              crossAxisAlignment: CrossAxisAlignment.start,
                              children: const [

                                Text(
                                  'Bem vindos a GREEN!',
                                  style: TextStyle(
                                      fontSize: 26, fontWeight: FontWeight.bold),
                                ),
                                SizedBox(height: 20),
                                Text(
                                  'Matenha suas contas em dia! ',
                                  style: TextStyle(fontSize: 15),
                                ),
                                SizedBox(height: 10),
                                InputLoginWidget(),
                                SizedBox(
                                  height: 10,
                                ),
                                TextButtonExpanded(label: 'esqueceu a senha'),
                                CreaterAcount(label: ' cadastro'),
                              ],
                            ),
                          ),
                        ),
                      ),
                    )
                  ],
                ),
              );
            }


            void navigateToHome() {
              Navigator.of(context).pushReplacement(MaterialPageRoute(
                  builder: (_) => const HomePage2(),
                  settings: RouteSettings(arguments: _userCredential)));
            }

          }


          //home


          import 'package:flutter/material.dart';
          import 'package:green/modules/HomePage/Controller/home_controller.dart';
          import 'package:provider/provider.dart';
          import '../../../models/transaction/transaction_model.dart';
          import 'drawer_page.dart';

          class HomePage3 extends StatefulWidget {
            const HomePage3({Key? key}) : super(key: key);

            @override
            State<HomePage3> createState() => _HomePage3State();
          }

          class _HomePage3State extends State<HomePage3> {
            bool _isMeuGreen = false;
            static const Color _primaryColor = Colors.green;
            static const Color _secondaryColor = Colors.white38;
            static const Color _thirdColor = Colors.deepOrangeAccent;

          //list imagens = transações

            final List<TransactionModel> _transactionList = [
              // modificar para o list Icon

              TransactionModel(
                logo2: 'assets/academia.png',
                name: "PROZ Fitness",
                amount: '-10,00',
                title: '',
                dateTime: DateTime.now(),
              ),
              TransactionModel(
                logo2: 'assets/contas.png',
                name: "Contas",
                amount: '',
                title: '',
                dateTime: DateTime.now(),
              ),
              TransactionModel(
                logo2: 'assets/petshop.png',
                name: "PetShop",
                amount: '-22,50',
                title: '',
                dateTime: DateTime.now(),
              ),
              TransactionModel(
                logo2: 'assets/combustivel.png',
                name: "Gasolina",
                amount: '-100,00',
                title: '',
                dateTime: DateTime.now(),
              ),
              TransactionModel(
                logo2: 'assets/transporte.png',
                name: "Uber",
                amount: '-35,00',
                title: '',
                dateTime: DateTime.now(),
              ),
              TransactionModel(
                logo2: 'assets/mercado.png',
                name: "Atacadão",
                amount: '-350,00',
                title: '',
                dateTime: DateTime.now(),
              ),
            ];

            @override
            Widget build(BuildContext context) {
              return Scaffold(
                appBar: _buildAppBar(),
                drawer: const DrawerApp(),
                body: Consumer<HomeController>(builder: (context, controller, __) {
                  return Column(
                    children: [
                      _appbarBotomSection(controller.total()),
                      _mainBoard(),
                    ],
                  );
                }),
              );
            }

            ///widgets Homer perfil
            AppBar _buildAppBar() {
              return AppBar(
                  elevation: 0,
                  backgroundColor: _primaryColor,
                  actions: const <Widget>[
                    Padding(
                      padding: EdgeInsets.only(right: 20),
                    )
                  ]);
            }

          //appBar Bottom Sequencia

            Widget _appbarBotomSection(double value) {
              return Container(
                padding: const EdgeInsets.symmetric(horizontal: 50),
                width: MediaQuery.of(context).size.width,
                decoration: const BoxDecoration(
                  color: _primaryColor,
                  borderRadius: BorderRadius.only(
                      bottomLeft: Radius.circular(50), bottomRight: Radius.circular(50)),
                ),
                child: Column(
                  children: [
                    Row(
                      mainAxisAlignment: MainAxisAlignment.center,
                      crossAxisAlignment: CrossAxisAlignment.start,
                      children: <Widget>[
                        // entrar com a logica no lugar do texto
                        const Text(
                          'R\$ ',
                          style: TextStyle(
                            color: Colors.white,
                            fontSize: 22,
                            fontWeight: FontWeight.w600,
                            height: 1,
                          ),
                        ),
                        // entrar com a logica no lugar do texto
                        Text(value.toStringAsFixed(2).replaceAll(".", ","),
                            style: const TextStyle(
                              color: Colors.white,
                              fontSize: 50,
                              fontWeight: FontWeight.w600,
                              height: 0.9,
                            )),
                      ],
                    ),
                    const SizedBox(
                      height: 5,
                    ),
                    Text(
                      'Contas do Mês ',
                      style: TextStyle(
                          color: Colors.white.withOpacity(0.8),
                          fontSize: 20,
                          fontWeight: FontWeight.w500,
                          height: 1),
                    ),
                    const SizedBox(
                      height: 32,
                    ),

                    ],
                ),
              );
            }

            //aqui começa os widgets com graficos
            Expanded _mainBoard() {
              return Expanded(
                child: SingleChildScrollView(
                  padding: const EdgeInsets.symmetric(horizontal: 20, vertical: 30),
                  physics: const ClampingScrollPhysics(),
                  child: Column(
                    children: <Widget>[
                      _reportCell(
                          isSavings: true,
                          title: 'Combustivel',
                          gastos: 'R\$ 150,00',
                          progress: 25),
                      //icone vermelho
                      const SizedBox(height: 16),
                      _reportCell(
                          isSavings: false,
                          title: ' Limite Financeiro',
                          gastos: 'R\$ 640,00',
                          progress: 50),
                      const SizedBox(
                        height: 32,
                      ),
                      //texto na main
                      Column(
                        children: <Widget>[
                          Padding(
                            padding: const EdgeInsets.symmetric(horizontal: 8),
                            child: Row(
                              mainAxisAlignment: MainAxisAlignment.spaceBetween,
                              children: const [
                                Text(
                                  'Transações',
                                  style: TextStyle(
                                    color: Colors.black,
                                    fontWeight: FontWeight.w500,
                                  ),
                                ),
                                Text(
                                  'Valor',
                                  style: TextStyle(
                                    color: Colors.black,
                                    fontWeight: FontWeight.w500,
                                  ),
                                )
                              ],
                            ),
                          ),
                          const Divider(),

                          // listview widgets (trocar para logica transações

                          ListView.separated(
                            primary: false,
                            shrinkWrap: true,
                            separatorBuilder: (context, index) => const Divider(),
                            itemCount: _transactionList.length,
                            itemBuilder: (context, index) => ListTile(
                              contentPadding: EdgeInsets.zero,
                              leading: Container(
                                width: 60,
                                height: 60,
                                clipBehavior: Clip.antiAlias,
                                alignment: Alignment.center,
                                decoration: BoxDecoration(
                                  shape: BoxShape.circle,
                                  border:
                                  Border.all(color: _primaryColor.withOpacity(0.1)),
                                ),
                                child: Image.asset(_transactionList[index].logo2,
                                    fit: BoxFit.cover, width: 30, height: 30),
                              ),
                              title: Text(_transactionList[index].name,
                                  style: TextStyle(
                                    color: Colors.black87,
                                    fontSize: 16,
                                    fontWeight: FontWeight.w600,
                                  )),
                              subtitle: Text(
                                _transactionList[index].dateTime.toString(),
                                style: TextStyle(
                                  color: _primaryColor,
                                  fontSize: 14,
                                  fontWeight: FontWeight.w500,
                                ),
                              ),
                              trailing: Text(
                                _transactionList[index].amount,
                                style: TextStyle(
                                  color: Colors.black87,
                                  fontSize: 16,
                                  fontWeight: FontWeight.w600,
                                ),
                              ),
                            ),
                          ),
                        ],
                      )
                    ],
                  ),
                ),
              );
            }

            ///Report Cell
            Container _reportCell({
              required bool isSavings,
              required String title,
              required String gastos,
              required int progress,
            }) {
              return Container(
                padding: const EdgeInsets.symmetric(horizontal: 30, vertical: 16),
                decoration: BoxDecoration(
                  borderRadius: BorderRadius.circular(30),
                  color: isSavings ? Colors.white : _thirdColor,
                  border: isSavings
                      ? Border.all(color: _primaryColor.withOpacity(0.1), width: 2)
                      : null,
                  boxShadow: isSavings
                      ? []
                      : [
                    BoxShadow(
                        color: _thirdColor.withOpacity(0.4),
                        offset: const Offset(1, 0),
                        blurRadius: 10),
                  ],
                ),

          //graficos adicionar logica

                child: Row(
                  children: <Widget>[
                    Stack(
                      children: <Widget>[
                        SizedBox(
                          width: 60,
                          height: 60,
                          child: CircularProgressIndicator(
                            value: progress / 100,
                            strokeWidth: 6,
                            backgroundColor: isSavings
                                ? Colors.black.withOpacity(0.2)
                                : Colors.black.withOpacity(0.1),
                            valueColor: AlwaysStoppedAnimation<Color>(
                                isSavings ? _secondaryColor : Colors.white),
                          ),
                        ),
                        Container(
                          width: 60,
                          height: 60,
                          alignment: Alignment.center,
                          child: Text(
                            '$progress%',
                            style: TextStyle(
                              color: isSavings ? Colors.black : Colors.white,
                              fontSize: 16,
                              fontWeight: FontWeight.w600,
                            ),
                          ),
                        ),
                      ],
                    ),
                    const SizedBox(
                      width: 30,
                    ),

                    //graficos 2
                    Column(
                      mainAxisAlignment: MainAxisAlignment.center,
                      crossAxisAlignment: CrossAxisAlignment.start,
                      children: <Widget>[
                        Text(
                          title,
                          style: TextStyle(
                            color: isSavings ? Colors.black : Colors.white,
                            fontSize: 18,
                            fontWeight: FontWeight.w500,
                          ),
                        ),
                        const SizedBox(
                          height: 12,
                        ),
                        Row(
                          children: <Widget>[
                            _reportInner(
                              isSavings: isSavings,
                              title: 'gastos',
                              value: gastos,
                            ),
                            const SizedBox(
                              width: 24,
                            ),
                          ],
                        ),
                      ],
                    ),
                  ],
                ),
              );
            }
          }

          Column _reportInner(
              {required bool isSavings, required String title, required String value}) {
            return Column(
              crossAxisAlignment: CrossAxisAlignment.start,
              children: <Widget>[
                Text(
                  title,
                  style: TextStyle(
                    color: isSavings
                        ? _HomePage3State._primaryColor.withOpacity(0.5)
                        : Colors.white,
                    fontSize: 14,
                    fontWeight: FontWeight.w500,
                  ),
                ),
                const SizedBox(
                  height: 4,
                ),
                Text(
                  value,
                  style: TextStyle(
                    color: isSavings ? Colors.black87 : Colors.white,
                    fontSize: 14,
                    fontWeight: FontWeight.w600,
                  ),
                ),
              ],
            );
          }




          graficos

          _reportCell(
                          isSavings: true,
                          title: 'Combustivel',
                          gastos: 'R\$ 150,00',
                          progress: 25),
                      //icone vermelho
                      const SizedBox(height: 16),
                      _reportCell(
                          isSavings: false,
                          title: ' Limite Financeiro',
                          gastos: 'R\$ 640,00',
                          progress: 50),


                          ////////////////////////////////////////////////////////



                          import 'package:flutter/material.dart';
                          import 'package:green/modules/HomePage/Controller/home_controller.dart';
                          import 'package:provider/provider.dart';
                          import '../../../models/transaction/transaction_model.dart';
                          import 'drawer_page.dart';

                          class HomePage2 extends StatefulWidget {
                            const HomePage2({Key? key}) : super(key: key);

                            @override
                            State<HomePage2> createState() => _HomePage2State();
                          }

                          class _HomePage2State extends State<HomePage2> {
                            bool _isMeuGreen = false;
                            static const Color _primaryColor = Colors.green;
                            static const Color _secondaryColor = Colors.white38;
                            static const Color _thirdColor = Colors.deepOrangeAccent;

                          //list imagens = transações

                            final List<TransactionModel> _transactionList = [
                              // modificar para o list Icon
                              TransactionModel(
                                logo2: 'assets/mcdonalds.png',
                                name: "Ifood",
                                amount: '-32,50',
                                title: '',
                                dateTime: DateTime.now(),
                              ),
                              TransactionModel(
                                logo2: 'assets/academia.png',
                                name: "PROZ Fitness",
                                amount: '-100,00',
                                title: '',
                                dateTime: DateTime.now(),
                              ),
                              TransactionModel(
                                logo2: 'assets/contas.png',
                                name: "Contas",
                                amount: '',
                                title: '',
                                dateTime: DateTime.now(),
                              ),
                              TransactionModel(
                                logo2: 'assets/petshop.png',
                                name: "PetShop",
                                amount: '-22,50',
                                title: '',
                                dateTime: DateTime.now(),
                              ),
                              TransactionModel(
                                logo2: 'assets/combustivel.png',
                                name: "Gasolina",
                                amount: '-100,00',
                                title: '',
                                dateTime: DateTime.now(),
                              ),
                              TransactionModel(
                                logo2: 'assets/transporte.png',
                                name: "Uber",
                                amount: '-35,00',
                                title: '',
                                dateTime: DateTime.now(),
                              ),
                              TransactionModel(
                                logo2: 'assets/mercado.png',
                                name: "Atacadão",
                                amount: '-350,00',
                                title: '',
                                dateTime: DateTime.now(),
                              ),
                            ];

                            @override
                            Widget build(BuildContext context) {
                              return Scaffold(
                                appBar: _buildAppBar(),
                                drawer: const DrawerApp(),
                                body: Consumer<HomeController>(builder: (context, controller, __) {
                                  return Column(
                                    children: [
                                      _appbarBotomSection(controller.total()),
                                      _mainBoard(),
                                    ],
                                  );
                                }),
                              );
                            }

                            ///widgets Homer perfil
                            AppBar _buildAppBar() {
                              return AppBar(
                                  elevation: 0,
                                  backgroundColor: _primaryColor,
                                  actions: const <Widget>[
                                    Padding(
                                      padding: EdgeInsets.only(right: 20),
                                    )
                                  ]);
                            }

                          //appBar Bottom Sequencia

                            Widget _appbarBotomSection(double value) {
                              return Container(
                                padding: const EdgeInsets.symmetric(horizontal: 50),
                                width: MediaQuery.of(context).size.width,
                                decoration: const BoxDecoration(
                                  color: _primaryColor,
                                  borderRadius: BorderRadius.only(
                                      bottomLeft: Radius.circular(50), bottomRight: Radius.circular(50)),
                                ),
                                child: Column(
                                  children: [
                                    Row(
                                      mainAxisAlignment: MainAxisAlignment.center,
                                      crossAxisAlignment: CrossAxisAlignment.start,
                                      children: <Widget>[
                                        // entrar com a logica no lugar do texto
                                        const Text(
                                          'R\$ ',
                                          style: TextStyle(
                                            color: Colors.white,
                                            fontSize: 22,
                                            fontWeight: FontWeight.w600,
                                            height: 1,
                                          ),
                                        ),
                                        // entrar com a logica no lugar do texto
                                        Text(value.toStringAsFixed(2).replaceAll(".", ","),
                                            style: const TextStyle(
                                              color: Colors.white,
                                              fontSize: 50,
                                              fontWeight: FontWeight.w600,
                                              height: 0.9,
                                            )),
                                      ],
                                    ),
                                    const SizedBox(
                                      height: 5,
                                    ),
                                    Text(
                                      'Contas do Mês ',
                                      style: TextStyle(
                                          color: Colors.white.withOpacity(0.8),
                                          fontSize: 20,
                                          fontWeight: FontWeight.w500,
                                          height: 1),
                                    ),
                                    const SizedBox(
                                      height: 32,
                                    ),
                                    Row(
                                      mainAxisAlignment: MainAxisAlignment.spaceAround,
                                      children: <Widget>[
                                        // dentro do planejamento
                                        GestureDetector(
                                          onTap: () {
                                            setState(() {
                                              _isMeuGreen = !_isMeuGreen;
                                            });
                                          },
                                          child: Text(
                                            'Meu Green',
                                            style: TextStyle(
                                                color: _isMeuGreen ? _secondaryColor : Colors.white,
                                                fontSize: 15,
                                                fontWeight: FontWeight.w500,
                                                height: 2),
                                          ),
                                        ),
                                        GestureDetector(
                                            onTap: () {
                                              setState(() {
                                                _isMeuGreen = !_isMeuGreen;
                                              });
                                            },
                                            child: Text(
                                              'Valores gastos',
                                              style: TextStyle(
                                                  color: _isMeuGreen ? Colors.white : _secondaryColor,
                                                  fontSize: 15,
                                                  fontWeight: FontWeight.w500,
                                                  height: 2),
                                            )),
                                      ],
                                    ),
                                    const SizedBox(
                                      height: 10,
                                    )
                                  ],
                                ),
                              );
                            }

                            //aqui começa os widgets com graficos
                            Expanded _mainBoard() {
                              return Expanded(
                                child: SingleChildScrollView(
                                  padding: const EdgeInsets.symmetric(horizontal: 20, vertical: 30),
                                  physics: const ClampingScrollPhysics(),
                                  child: Column(
                                    children: <Widget>[
                                      _reportCell(
                                          isSavings: true,
                                          title: 'Combustivel',
                                          gastos: 'R\$ 150,00',
                                          progress: 25),
                                      //icone vermelho
                                      const SizedBox(height: 16),
                                      _reportCell(
                                          isSavings: false,
                                          title: ' Limite Financeiro',
                                          gastos: 'R\$ 640,00',
                                          progress: 50),
                                      const SizedBox(
                                        height: 32,
                                      ),
                                      //texto na main
                                      Column(
                                        children: <Widget>[
                                          Padding(
                                            padding: const EdgeInsets.symmetric(horizontal: 8),
                                            child: Row(
                                              mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                              children: const [
                                                Text(
                                                  'Transações',
                                                  style: TextStyle(
                                                    color: Colors.black,
                                                    fontWeight: FontWeight.w500,
                                                  ),
                                                ),
                                                Text(
                                                  'Valor',
                                                  style: TextStyle(
                                                    color: Colors.black,
                                                    fontWeight: FontWeight.w500,
                                                  ),
                                                )
                                              ],
                                            ),
                                          ),
                                          const Divider(),

                                          // listview widgets (trocar para logica transações

                                          ListView.separated(
                                            primary: false,
                                            shrinkWrap: true,
                                            separatorBuilder: (context, index) => const Divider(),
                                            itemCount: _transactionList.length,
                                            itemBuilder: (context, index) => ListTile(
                                              contentPadding: EdgeInsets.zero,
                                              leading: Container(
                                                width: 60,
                                                height: 60,
                                                clipBehavior: Clip.antiAlias,
                                                alignment: Alignment.center,
                                                decoration: BoxDecoration(
                                                  shape: BoxShape.circle,
                                                  border:
                                                      Border.all(color: _primaryColor.withOpacity(0.1)),
                                                ),
                                                child: Image.asset(_transactionList[index].logo2,
                                                    fit: BoxFit.cover, width: 30, height: 30),
                                              ),
                                              title: Text(_transactionList[index].name,
                                                  style: TextStyle(
                                                    color: Colors.black87,
                                                    fontSize: 16,
                                                    fontWeight: FontWeight.w600,
                                                  )),
                                              subtitle: Text(
                                                _transactionList[index].dateTime.toString(),
                                                style: TextStyle(
                                                  color: _primaryColor,
                                                  fontSize: 14,
                                                  fontWeight: FontWeight.w500,
                                                ),
                                              ),
                                              trailing: Text(
                                                _transactionList[index].amount,
                                                style: TextStyle(
                                                  color: Colors.black87,
                                                  fontSize: 16,
                                                  fontWeight: FontWeight.w600,
                                                ),
                                              ),
                                            ),
                                          ),
                                        ],
                                      )
                                    ],
                                  ),
                                ),
                              );
                            }

                            ///Report Cell
                            Container _reportCell({
                              required bool isSavings,
                              required String title,
                              required String gastos,
                              required int progress,
                            }) {
                              return Container(
                                padding: const EdgeInsets.symmetric(horizontal: 30, vertical: 16),
                                decoration: BoxDecoration(
                                  borderRadius: BorderRadius.circular(30),
                                  color: isSavings ? Colors.white : _thirdColor,
                                  border: isSavings
                                      ? Border.all(color: _primaryColor.withOpacity(0.1), width: 2)
                                      : null,
                                  boxShadow: isSavings
                                      ? []
                                      : [
                                          BoxShadow(
                                              color: _thirdColor.withOpacity(0.4),
                                              offset: const Offset(1, 0),
                                              blurRadius: 10),
                                        ],
                                ),

                          //graficos adicionar logica

                                child: Row(
                                  children: <Widget>[
                                    Stack(
                                      children: <Widget>[
                                        SizedBox(
                                          width: 60,
                                          height: 60,
                                          child: CircularProgressIndicator(
                                            value: progress / 100,
                                            strokeWidth: 6,
                                            backgroundColor: isSavings
                                                ? Colors.black.withOpacity(0.2)
                                                : Colors.black.withOpacity(0.1),
                                            valueColor: AlwaysStoppedAnimation<Color>(
                                                isSavings ? _secondaryColor : Colors.white),
                                          ),
                                        ),
                                        Container(
                                          width: 60,
                                          height: 60,
                                          alignment: Alignment.center,
                                          child: Text(
                                            '$progress%',
                                            style: TextStyle(
                                              color: isSavings ? Colors.black : Colors.white,
                                              fontSize: 16,
                                              fontWeight: FontWeight.w600,
                                            ),
                                          ),
                                        ),
                                      ],
                                    ),
                                    const SizedBox(
                                      width: 30,
                                    ),

                                    //graficos 2
                                    Column(
                                      mainAxisAlignment: MainAxisAlignment.center,
                                      crossAxisAlignment: CrossAxisAlignment.start,
                                      children: <Widget>[
                                        Text(
                                          title,
                                          style: TextStyle(
                                            color: isSavings ? Colors.black : Colors.white,
                                            fontSize: 18,
                                            fontWeight: FontWeight.w500,
                                          ),
                                        ),
                                        const SizedBox(
                                          height: 12,
                                        ),
                                        Row(
                                          children: <Widget>[
                                            _reportInner(
                                              isSavings: isSavings,
                                              title: 'gastos',
                                              value: gastos,
                                            ),
                                            const SizedBox(
                                              width: 24,
                                            ),
                                          ],
                                        ),
                                      ],
                                    ),
                                  ],
                                ),
                              );
                            }
                          }

                          Column _reportInner(
                              {required bool isSavings, required String title, required String value}) {
                            return Column(
                              crossAxisAlignment: CrossAxisAlignment.start,
                              children: <Widget>[
                                Text(
                                  title,
                                  style: TextStyle(
                                    color: isSavings
                                        ? _HomePage2State._primaryColor.withOpacity(0.5)
                                        : Colors.white,
                                    fontSize: 14,
                                    fontWeight: FontWeight.w500,
                                  ),
                                ),
                                const SizedBox(
                                  height: 4,
                                ),
                                Text(
                                  value,
                                  style: TextStyle(
                                    color: isSavings ? Colors.black87 : Colors.white,
                                    fontSize: 14,
                                    fontWeight: FontWeight.w600,
                                  ),
                                ),
                              ],
                            );
                          }




                    NOVA HOME
                          ====================================

                          import 'package:flutter/cupertino.dart';
                          import 'package:flutter/material.dart';
                          import 'package:green/modules/HomePage/Controller/home_controller.dart';
                          import 'package:provider/provider.dart';
                          import 'package:smooth_page_indicator/smooth_page_indicator.dart';
                          import '../../../models/transaction/transaction_model.dart';
                          import '../Widgets/cards_widgets/Transaction_widget.dart';
                          import '../Widgets/cards_widgets/cards_homePage.dart';
                          import 'drawer_page.dart';

                          class HomePage2 extends StatefulWidget {
                            const HomePage2({Key? key}) : super(key: key);

                            @override
                            State<HomePage2> createState() => _HomePage2State();
                          }

                          class _HomePage2State extends State<HomePage2> {
                            final _controller = PageController();
                            static const Color _primaryColor = Colors.green;
                            static const Color _secondaryColor = Colors.white38;
                            static const Color _thirdColor = Colors.deepOrangeAccent;

                          //list imagens = transações

                            final List<TransactionModel> _transactionList = [
                              // modificar para o list Icon

                              TransactionModel(
                                logo2: 'assets/academia.png',
                                name: "PROZ Fitness",
                                amount: '-500,00',
                                title: '',
                                dateTime: DateTime.now(),
                              ),
                              TransactionModel(
                                logo2: 'assets/contas.png',
                                name: "Contas",
                                amount: '',
                                title: '',
                                dateTime: DateTime.now(),
                              ),
                              TransactionModel(
                                logo2: 'assets/petshop.png',
                                name: "PetShop",
                                amount: '-22,50',
                                title: '',
                                dateTime: DateTime.now(),
                              ),
                              TransactionModel(
                                logo2: 'assets/combustivel.png',
                                name: "Gasolina",
                                amount: '-100,00',
                                title: '',
                                dateTime: DateTime.now(),
                              ),
                              TransactionModel(
                                logo2: 'assets/transporte.png',
                                name: "Uber",
                                amount: '-35,00',
                                title: '',
                                dateTime: DateTime.now(),
                              ),
                              TransactionModel(
                                logo2: 'assets/mercado.png',
                                name: "Atacadão",
                                amount: '-350,00',
                                title: '',
                                dateTime: DateTime.now(),
                              ),
                            ];

                            @override
                            Widget build(BuildContext context) {
                              return Scaffold(
                                appBar: _buildAppBar(),
                                drawer: const DrawerApp(),
                                body: Consumer<HomeController>(builder: (context, controller, __) {
                                  return Column(
                                    children: [
                                      _appbarHeader(controller.total()),
                                      _mainBoard(),
                                      _MainTransacoes(),

                                    ],
                                  );
                                }),
                              );
                            }

                            ///widgets Homer perfil
                            AppBar _buildAppBar() {
                              return AppBar(
                                  elevation: 0,
                                  backgroundColor: _primaryColor,
                                  actions: const <Widget>[
                                    Padding(
                                      padding: EdgeInsets.only(right: 20),
                                    )
                                  ]);
                            }

                          //appBar  header

                            Widget _appbarHeader(double value) {
                              return Container(
                                width: MediaQuery
                                    .of(context)
                                    .size
                                    .width,
                                decoration: const BoxDecoration(
                                  color: _primaryColor,
                                  borderRadius: BorderRadius.only(
                                      bottomLeft: Radius.circular(60), bottomRight: Radius.circular(60)),
                                ),
                                child: Column(
                                    children: [
                                      Row(
                                        mainAxisAlignment: MainAxisAlignment.center,
                                        crossAxisAlignment: CrossAxisAlignment.start,
                                        children: <Widget>[
                                          // entrar com a logica no lugar do texto
                                          const Text(
                                            'R\$ ',
                                            style: TextStyle(
                                              color: Colors.white,
                                              fontSize: 22,
                                              fontWeight: FontWeight.w600,
                                              height: 0,
                                            ),
                                          ),
                                          // entrar com a logica no lugar do texto
                                          Text(value.toStringAsFixed(2).replaceAll(".", ","),
                                              // provider = funçao do pablo
                                              style: const TextStyle(
                                                color: Colors.white,
                                                fontSize: 50,
                                                fontWeight: FontWeight.w600,
                                                height: 0.9,
                                              )),
                                        ],
                                      ),
                                      const SizedBox(
                                        height: 10,
                                      ),
                                      Text(
                                        '      Contas do Mês ',
                                        style: TextStyle(
                                            color: Colors.white.withOpacity(0.8),
                                            // ================ Header
                                            fontSize: 20,
                                            fontWeight: FontWeight.w500,
                                            height: 1),
                                      ),
                                      const SizedBox(
                                        height: 32,
                                      ),

                                    ]
                                ),

                              );
                            }

                            Widget _mainBoard() {
                              return Container(

                                padding: EdgeInsets.fromLTRB(3, 0, 3, 0),
                                height: 200,
                                width: 500,
                                child: PageView(
                                  scrollDirection: Axis.horizontal,
                                  controller: _controller,

                                  children: const [
                                    CardsPageHome(
                                      color: Colors.red,
                                      tittle: 'Alimentação',
                                      description: 'Ifood',
                                      value: '',

                                    ),

                                    CardsPageHome(
                                      color: Colors.deepPurple,
                                      tittle: 'Despesas',
                                      description: 'Farmacia',
                                      value: '100,00',

                                    ),
                                    CardsPageHome(
                                      color: Colors.green,
                                      tittle: 'Saúde',
                                      description: 'Farmacia',
                                      value: '50,00',

                                    ),
                                    CardsPageHome(
                                      color: Colors.purple,
                                      tittle: 'Transporte',
                                      description: 'Combustivel',
                                      value: '150.00',

                                    ),
                                    CardsPageHome(
                                      color: Colors.deepPurple,
                                      tittle: ' Casa',
                                      description: 'Supermecado Aurora',
                                      value: '450,00',

                                    ),
                                    CardsPageHome(
                                      color: Colors.black12,
                                      tittle: 'Outros',
                                      description: 'Farmacia',
                                      value: '35,00',

                                    ),
                                  ],
                                ),

                              );
                            }
       import 'package:flutter/cupertino.dart';
       import 'package:flutter/material.dart';
       import 'package:green/modules/HomePage/Controller/home_controller.dart';
       import 'package:provider/provider.dart';
       import 'package:smooth_page_indicator/smooth_page_indicator.dart';
       import '../../../models/transaction/transaction_model.dart';
       import '../Widgets/cards_widgets/Transaction_widget.dart';
       import '../Widgets/cards_widgets/cards_homePage.dart';
       import 'drawer_page.dart';

       class HomePage2 extends StatefulWidget {
         const HomePage2({Key? key}) : super(key: key);

         @override
         State<HomePage2> createState() => _HomePage2State();
       }

       class _HomePage2State extends State<HomePage2> {
         final _controller = PageController();
         static const Color _primaryColor = Colors.green;
         static const Color _secondaryColor = Colors.white38;
         static const Color _thirdColor = Colors.deepOrangeAccent;

       //list imagens = transações

         final List<TransactionModel> _transactionList = [
           // modificar para o list Icon

           TransactionModel(
             logo2: 'assets/academia.png',
             name: "PROZ Fitness",
             amount: '-500,00',
             title: '',
             dateTime: DateTime.now(),
           ),
           TransactionModel(
             logo2: 'assets/contas.png',
             name: "Contas",
             amount: '',
             title: '',
             dateTime: DateTime.now(),
           ),
           TransactionModel(
             logo2: 'assets/petshop.png',
             name: "PetShop",
             amount: '-22,50',
             title: '',
             dateTime: DateTime.now(),
           ),
           TransactionModel(
             logo2: 'assets/combustivel.png',
             name: "Gasolina",
             amount: '-100,00',
             title: '',
             dateTime: DateTime.now(),
           ),
           TransactionModel(
             logo2: 'assets/transporte.png',
             name: "Uber",
             amount: '-35,00',
             title: '',
             dateTime: DateTime.now(),
           ),
           TransactionModel(
             logo2: 'assets/mercado.png',
             name: "Atacadão",
             amount: '-350,00',
             title: '',
             dateTime: DateTime.now(),
           ),
         ];

         @override
         Widget build(BuildContext context) {


           return Scaffold(
             appBar: _buildAppBar(),
             drawer: const DrawerApp(),
             body: Consumer<HomeController>(builder: (context, controller, __) {
               return Column(
                 children: [
                   _appbarHeader(controller.total()),
                   _mainBoard(),
                   _MainTransacoes(),

                 ],
               );
             }),
           );
         }

         ///widgets Homer perfil
         AppBar _buildAppBar() {
           return AppBar(
               elevation: 0,
               backgroundColor: _primaryColor,
               actions: const <Widget>[
                 Padding(
                   padding: EdgeInsets.only(right: 20),
                 )
               ]);
         }

       //appBar  header

         Widget _appbarHeader(double value) {
           return Container(
             width: MediaQuery
                 .of(context)
                 .size
                 .width,
             decoration: const BoxDecoration(
               color: _primaryColor,
               borderRadius: BorderRadius.only(
                   bottomLeft: Radius.circular(60), bottomRight: Radius.circular(60)),
             ),
             child: Column(
                 children: [
                   Row(
                     mainAxisAlignment: MainAxisAlignment.center,
                     crossAxisAlignment: CrossAxisAlignment.start,
                     children: <Widget>[
                       // entrar com a logica no lugar do texto
                       const Text(
                         'R\$ ',
                         style: TextStyle(
                           color: Colors.white,
                           fontSize: 22,
                           fontWeight: FontWeight.w600,
                           height: 0,
                         ),
                       ),
                       // entrar com a logica no lugar do texto
                       Text(value.toStringAsFixed(2).replaceAll(".", ","),
                           // provider = funçao do pablo
                           style: const TextStyle(
                             color: Colors.white,
                             fontSize: 50,
                             fontWeight: FontWeight.w600,
                             height: 0.9,
                           )),
                     ],
                   ),
                   const SizedBox(
                     height: 10,
                   ),
                   Text(
                     '      Contas do Mês ',
                     style: TextStyle(
                         color: Colors.white.withOpacity(0.8),
                         // ================ Header
                         fontSize: 20,
                         fontWeight: FontWeight.w500,
                         height: 1),
                   ),
                   const SizedBox(
                     height: 32,
                   ),

                 ]
             ),
           );

         }

         Widget _mainBoard() {
           return Container(

             padding: EdgeInsets.fromLTRB(3, 0, 3, 0),
             height: 200,
             width: 500,
             child: PageView(

               controller:_controller,
               scrollDirection: Axis.horizontal,


               children: const [

                 CardsPageHome(
                   color: Colors.deepOrangeAccent,
                   tittle: 'Alimentação',
                   description: 'Ifood',
                   value: '100,00',
       valor: 15,
                 ),

                 CardsPageHome(
                   color: Colors.deepPurple,
                   tittle: 'Despesas',
                   description: 'Farmacia',
                   value: '100,00',
                     valor: 10,
                 ),
                 CardsPageHome(
                   color: Colors.green,
                   tittle: 'Saúde',
                   description: 'Farmacia',
                   value: '50,00',
                   valor:10,
                 ),
                 CardsPageHome(
                   color: Colors.purple,
                   tittle: 'Transporte',
                   description: 'Combustivel',
                   value: '150.00',
                   valor:50
                 ),
                 CardsPageHome(
                   color: Colors.deepPurple,
                   tittle: ' Casa',
                   description: 'Supermecado Aurora',
                   value: '450,00',
                   valor:10,
                 ),
                 CardsPageHome(
                   color: Colors.black12,
                   tittle: 'Outros',
                   description: 'Farmacia',
                   value: '35,00',
                   valor:10,
                 ),
               ],
             ),
           );

         }
         Expanded _MainTransacoes() {
           return Expanded(

             child: SingleChildScrollView(
               padding: const EdgeInsets.symmetric(horizontal: 20, vertical: 30),
               physics: const ClampingScrollPhysics(),
               child: Column(
                 children: <Widget>[
                   Column(
                     children: [



                           Column(
                             children: <Widget>[

                               Padding(
                                 padding: const EdgeInsets.symmetric(horizontal: 8),
                                 child: Row(
                                   mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                   children: const [
                                     Text(
                                       'Transações',
                                       style: TextStyle(
                                         color: Colors.black,
                                         fontWeight: FontWeight.w500,
                                       ),
                                     ),
                                     Text(
                                       'Valor',
                                       style: TextStyle(
                                         color: Colors.black,
                                         fontWeight: FontWeight.w500,
                                       ),
                                     )
                                   ],
                                 ),
                               ),
                               const Divider(),

                               // listview widgets (trocar para logica transações

                               ListView.separated(
                                 primary: false,
                                 shrinkWrap: true,
                                 separatorBuilder: (context, index) => const Divider(),
                                 itemCount: _transactionList.length,
                                 itemBuilder: (context, index) => ListTile(
                                   contentPadding: EdgeInsets.zero,
                                   leading: Container(
                                     width: 60,
                                     height: 60,
                                     clipBehavior: Clip.antiAlias,
                                     alignment: Alignment.center,
                                     decoration: BoxDecoration(
                                       shape: BoxShape.circle,
                                       border:
                                       Border.all(color: _primaryColor.withOpacity(0.1)),
                                     ),
                                     child: Image.asset(_transactionList[index].logo2,
                                         fit: BoxFit.cover, width: 30, height: 30),
                                   ),
                                   title: Text(_transactionList[index].name,
                                       style: TextStyle(
                                         color: Colors.black87,
                                         fontSize: 16,
                                         fontWeight: FontWeight.w600,
                                       )),
                                   subtitle: Text(
                                     _transactionList[index].dateTime.toString(),
                                     style: TextStyle(
                                       color: _primaryColor,
                                       fontSize: 14,
                                       fontWeight: FontWeight.w500,
                                     ),
                                   ),
                                   trailing: Text(
                                     _transactionList[index].amount,
                                     style: TextStyle(
                                       color: Colors.black87,
                                       fontSize: 16,
                                       fontWeight: FontWeight.w600,
                                     ),
                                   ),
                                 ),
                               ),
                             ],
                           )


                     ],
                   ),
                 ],
               ),
             ),
           );
         }
         Container _reportCell({
           required bool isSavings,
           required String title,
           required String gastos,
           required int progress,
         }) {
           return Container(
             padding: const EdgeInsets.symmetric(horizontal: 30, vertical: 16),
             decoration: BoxDecoration(
               borderRadius: BorderRadius.circular(30),
               color: isSavings ? Colors.white : Colors.grey,
               border: isSavings
                   ? Border.all(color: Colors.green.withOpacity(0.1), width: 2)
                   : null,
               boxShadow: isSavings
                   ? []
                   : [
                 BoxShadow(
                     color: Colors.deepOrangeAccent.withOpacity(0.4),
                     offset: const Offset(1, 0),
                     blurRadius: 10),
               ],
             ),

             //graficos adicionar logica

             child: Row(
               children: <Widget>[
                 Stack(
                   children: <Widget>[
                     SizedBox(
                       width: 60,
                       height: 60,
                       child: CircularProgressIndicator(
                         value: progress / 100,
                         strokeWidth: 6,
                         backgroundColor: isSavings
                             ? Colors.black.withOpacity(0.2)
                             : Colors.black.withOpacity(0.1),
                         valueColor: AlwaysStoppedAnimation<Color>(
                             isSavings ? Colors.black12 : Colors.white),
                       ),
                     ),
                     Container(
                       width: 60,
                       height: 60,
                       alignment: Alignment.center,
                       child: Text(
                         '$progress%',
                         style: TextStyle(
                           color: isSavings ? Colors.black : Colors.white,
                           fontSize: 16,
                           fontWeight: FontWeight.w600,
                         ),
                       ),
                     ),
                   ],
                 ),
                 const SizedBox(
                   width: 30,
                 ),

                 //graficos 2
                 Column(
                   mainAxisAlignment: MainAxisAlignment.center,
                   crossAxisAlignment: CrossAxisAlignment.start,
                   children: <Widget>[
                     Text(
                       title,
                       style: TextStyle(
                         color: isSavings ? Colors.black : Colors.white,
                         fontSize: 18,
                         fontWeight: FontWeight.w500,
                       ),
                     ),
                     const SizedBox(
                       height: 12,
                     ),
                     Row(
                       children: <Widget>[
                         _reportInner(
                           isSavings: isSavings,
                           title: 'gastos',
                           value: gastos,
                         ),
                         const SizedBox(
                           width: 24,
                         ),
                       ],
                     ),
                   ],
                 ),
               ],
             ),
           );
         }
       }






       Column _reportInner(
           {required bool isSavings, required String title, required String value}) {
         return Column(
           crossAxisAlignment: CrossAxisAlignment.start,
           children: <Widget>[
             Text(
               title,
               style: TextStyle(
                 color: isSavings
                     ? Colors.green.withOpacity(0.5)
                     : Colors.white,
                 fontSize: 14,
                 fontWeight: FontWeight.w500,
               ),
             ),
             const SizedBox(
               height: 4,
             ),
             Text(
               value,
               style: TextStyle(
                 color: isSavings ? Colors.black87 : Colors.white,
                 fontSize: 14,
                 fontWeight: FontWeight.w600,
               ),
             ),
           ],
         );
       }



       chart


         child: SfCircularChart(
                   legend: Legend(isVisible: true),
                   series: <PieSeries<_PieData, String>>[
                     PieSeries<_PieData, String>(
                         explode: true,
                         explodeIndex: 10,
                         dataSource: <_PieData>[
                           _PieData('10/02',2002,'Alimentação'),
                           _PieData('10/02',2002,'Famarcia'),
                           _PieData('10/02',2002,'Transporte'),
                           _PieData('10/02',2002,'Educação'),
                           _PieData('10/02',2002,'Despesa Pessoais'),



                         ],
                         xValueMapper: (_PieData data, _) => data.xData,
                         yValueMapper: (_PieData data, _) => data.yData,
                         dataLabelMapper: (_PieData data, _) => data.text,
                         dataLabelSettings: DataLabelSettings(isVisible: true)),
                   ]
               )
           );
         }
       }
         class  _PieData {
           _PieData(this.xData, this.yData, this.text);

           final String xData;
           final num yData;
           final String text;
         }


import 'package:flutter/material.dart';
import '../../../data/meuGreen_data.dart';
import '../Widgets/chart.dart';


class MeuGreen extends StatefulWidget {
  const MeuGreen({Key? key}) : super(key: key);

  @override
  State<MeuGreen> createState() => _MeuGreenState();
}

class _MeuGreenState extends State<MeuGreen> {
  List day=[ 'Dia','Semana','Mês','Ano'
  ];
  int  index_days =0;


  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(

        title:Text(' Meu Green',style: TextStyle(fontFamily: 'Kailasa'),),
      ),
       body: SafeArea(
         child:CustomScrollView(
           slivers: [
             SliverToBoxAdapter(
               child: Column(
                 children: [
                   SizedBox(height: 20),
                   Text('',style: TextStyle(
                     color: Colors.black,
                     fontSize: 18,
                       fontFamily: 'Kailasa'
                   ),
                   ),

             Padding(
               padding: const EdgeInsets.symmetric(horizontal:30 ),
               child: Row(
                 mainAxisAlignment: MainAxisAlignment.spaceBetween,
                 children: [
                   ...List.generate(4, (index) {
                     return   GestureDetector(
                       onTap:(){
                    setState(() {
                      index_days = index;
                    });
                       } ,
                       child: Container(
                         height: 30,
                         width: 80,
                         decoration: BoxDecoration(
                             borderRadius: BorderRadius.circular(10),
                             color: index_days == index ? Colors.green : Colors.white,

                         ),
                         alignment: Alignment.center,
                         child: Text(day[index],style:  TextStyle(
                             color: index_days == index ? Colors.white : Colors.black,
                             fontSize: 15,
                             fontWeight: FontWeight.w500,
                             fontFamily: 'Kailasa'
                         ),
                         ),
                       ),
                     );
                   }
                   )
                 ],
               ),

             ),
                   SizedBox(height: 20,),
                   Padding(
                     padding: const EdgeInsets.symmetric(horizontal: 15),
                     child: Row(
                       mainAxisAlignment: MainAxisAlignment.spaceAround,
                       children: [
                      Container(
                        width: 120,
                        height: 40,
                        child: Row(
                          children: [
                            GestureDetector(
                             onTap:(){},
                              child: Text('Despesas',style: TextStyle(
                                color: Colors.grey,
                                fontSize: 16,
                                fontFamily: 'Kailasa'
                              ),
                              ),
                            ),
                            Icon(
                              Icons.arrow_downward_sharp,
                              color: Colors.grey,
                            )
                          ],
                        ),
  ),

                       ],
                     ),
                   ),
                   SizedBox(height: 20),
                     Chart(),
                   SizedBox(height: 20),
                   Padding(padding: EdgeInsets.symmetric(horizontal: 10),
                     child: Row(
                       mainAxisAlignment: MainAxisAlignment.spaceBetween,
                       children: [
                         Text(
                             'Transações' ,
                           style: TextStyle(
                               color: Colors.black,
                               fontSize: 16,
                               fontWeight: FontWeight.w500,
                               fontFamily: 'Kailasa'
                         ),

                         ),
                         Icon(
                         Icons.swap_vert,
                         size: 25,
                         color: Colors.grey,)
                         ],
                     ),
                   )
                 ],
               ),
             ),
     SliverList(delegate: SliverChildBuilderDelegate((context,index) {
       return ListTile(
         leading: Image.asset('assets/${geter_top()[index].image!}',
           height: 39,
         ),
         title: Text(geter_top()[index].name!, style: TextStyle(
             fontFamily: 'Kailasa', fontWeight: FontWeight.w600, fontSize: 17),
         ),
         subtitle: Text(geter_top()[index].time!, style: TextStyle(
             fontFamily: 'Kailasa', fontWeight: FontWeight.w600, fontSize: 17),
         ),
         trailing: Text(geter_top()[index].fee!, style: TextStyle(
       fontFamily: 'Kailasa', fontWeight: FontWeight.bold, fontSize: 17,color:Colors.red),
         ),
       );
     },
    childCount: geter_top().length,
     ),
    ),
           ],
         )
       ),
    );
  }
}






